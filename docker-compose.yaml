version: '3.8'

networks:
  burp-suite-net:
    driver: bridge

services:
  request-db:
     container_name: request-db
     image: postgres:latest
     restart: on-failure
     env_file:
       - .env
     command:
       - "postgres"
       - "-c"
       - "max_connections=100"
       - "-c"
       - "shared_buffers=200MB"
       - "-c"
       - "effective_cache_size=0.5GB"
       - "-c"
       - "work_mem=16MB"
       - "-c"
       - "maintenance_work_mem=64MB"
       - "-c"
       - "random_page_cost=1.1"
       - "-c"
       - "temp_file_limit=1GB"
       - "-c"
       - "log_min_duration_statement=200ms"
       - "-c"
       - "idle_in_transaction_session_timeout=10s"
       - "-c"
       - "lock_timeout=1s"
       - "-c"
       - "statement_timeout=60s"
       - "-c"
       - "shared_preload_libraries=pg_stat_statements"
       - "-c"
       - "pg_stat_statements.max=10000"
       - "-c"
       - "pg_stat_statements.track=all"
     ports:
       - "${DB_PORT}:5432"
     environment:
       POSTGRES_DB: ${DB_NAME}
       POSTGRES_USER: ${DB_USER}
       POSTGRES_PASSWORD: ${DB_PASSWORD}
     volumes:
       - ./build/schema/:/docker-entrypoint-initdb.d/
     healthcheck:
       test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
       interval: 5s
       timeout: 5s
       retries: 5
       start_period: 10s
     networks:
       - burp-suite-net

  api:
    container_name: api
    build:
      context: .
      dockerfile: build/Dockerfile.api
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - .env:/docker-api/.env
      - ./config.yaml:/docker-api/config.yaml
      - ./api-logs:/docker-api/logs
    depends_on:
      request-db: {condition: service_healthy}
    networks:
      - burp-suite-net
  
  proxy:
    container_name: proxy
    build: 
     context: .
     dockerfile: build/Dockerfile.proxy
    ports:
      - 8080:8080
    restart: always
    volumes:
       - .env:/docker-proxy/.env
       - ./config.yaml:/docker-proxy/config.yaml
       - type: bind
         source: ./certs
         target: /docker-proxy/certs
    depends_on:
      request-db: {condition: service_healthy}
    networks:
      - burp-suite-net
